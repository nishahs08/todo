{"version":3,"sources":["Pages/Tag.tsx","Pages/CategoryChip.tsx","Pages/CategoriesChips.tsx","Pages/CustomButton.tsx","Pages/TextBox.tsx","Pages/AddForm.tsx","Pages/Navbar.tsx","Pages/Categories.tsx","Pages/CustomCheckbox.tsx","Pages/Sidebar.tsx","Pages/Todo.tsx","Pages/Todos.tsx","fonts/AdobeClean/AdobeClean-Regular.woff","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Tag","color","Hidden","smDown","style","width","height","backgroundColor","borderRadius","mdUp","CategoryChip","type","onClick","Grid","container","spacing","alignItems","padding","item","Typography","useStyles","makeStyles","selected","margin","notSelected","CategoriesChips","selectedCategories","categories","setSelectedCategories","classes","theme","useTheme","useMediaQuery","breakpoints","down","direction","map","i","className","includes","value","find","s","filtered","filter","handleCategoryClick","CustomButton","label","Button","textTransform","noBorder","border","root","background","fontSize","fontWeight","TextBox","setValue","InputLabel","TextField","onChange","e","target","variant","fullWidth","placeholder","InputProps","notchedOutline","AddForm","dismissPopup","addTodo","todo","setTodo","onAddClicked","tags","reduce","types","tagId","matchedCategory","category","id","push","justifyContent","title","description","_selectedCategories","tagIds","selectedTags","_selectedCategory","toolbar","appbar","zIndex","drawer","logo","Navbar","openAddTodo","AppBar","position","elevation","Toolbar","IconButton","Categories","setActiveState","checked","checkedLabel","CustomCheckbox","setChecked","FormControlLabel","control","Checkbox","disableFocusRipple","disableRipple","checkedIcon","content","marginLeft","sidebarContent","paperAnchorDockedLeft","borderRight","sidebar","Sidebar","activeCategory","setActiveCategory","hideDone","setHideDone","media","up","Box","Drawer","open","anchor","useTodoStyles","createStyles","card","cardHeader","textDecoration","cardContent","todoDone","Todo","onDeleteTodoClicked","onTodoStatusChanged","onEditTodoClicked","useState","menuRef","setMenuRef","closeTodoMenu","CardHeaderOptions","currentTarget","TagColors","tag","Card","CardHeader","action","done","Menu","keepMounted","anchorEl","onClose","MenuItem","CardContent","CardActions","Todos","todos","columnsCountBreakPoints","todoItem","createTheme","typography","fontFamily","overrides","MuiCssBaseline","AdobeClean","Wrapper","styled","App","fullScreen","useLocalStorage","setTodos","undefined","editableTodo","setEditableTodo","categoryFilter","setCategoryFilter","statusFilter","setStatusFilter","todoForDisplay","todoTags","tagWithColors","todosFilteredByCategory","todosFilteredByStatusAndCategory","ThemeProvider","CssBaseline","uuidv4","Dialog","DialogContent","newTodos","todoId","todoToBeEdited","status","updatedTodos","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3036b4e4.chunk.js","sourcesContent":["import { Hidden } from '@material-ui/core';\n\ninterface TagProps {\n\tcolor: string;\n}\nexport const Tag: React.FC<TagProps> = ({ color }) => {\n\treturn (\n\t\t<>\n\t\t\t<Hidden smDown>\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth: '30px',\n\t\t\t\t\t\theight: '30px',\n\t\t\t\t\t\tbackgroundColor: `${color}`,\n\t\t\t\t\t\tborderRadius: '50%',\n\t\t\t\t\t}}\n\t\t\t\t></div>\n\t\t\t</Hidden>\n\t\t\t<Hidden mdUp>\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth: '20px',\n\t\t\t\t\t\theight: '20px',\n\t\t\t\t\t\tbackgroundColor: `${color}`,\n\t\t\t\t\t\tborderRadius: '50%',\n\t\t\t\t\t}}\n\t\t\t\t></div>\n\t\t\t</Hidden>\n\t\t</>\n\t);\n};\n","import { Typography, Grid } from '@material-ui/core';\n\nimport { ICategoryType } from '../types';\nimport { Tag } from './Tag';\n\ninterface CategoryChipProps {\n\ttype: ICategoryType;\n\tcolor: string;\n\tonClick: (value: string) => void;\n}\nexport const CategoryChip: React.FC<CategoryChipProps> = ({ type, color, onClick }) => {\n\treturn (\n\t\t<>\n\t\t\t<Grid\n\t\t\t\tcontainer\n\t\t\t\tspacing={1}\n\t\t\t\talignItems='center'\n\t\t\t\tstyle={{ padding: '10px' }}\n\t\t\t\tonClick={() => onClick(type)}\n\t\t\t>\n\t\t\t\t<Grid item>\n\t\t\t\t\t{' '}\n\t\t\t\t\t<Tag color={color} />{' '}\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Typography>{type}</Typography>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</>\n\t);\n};\n","import { Grid, makeStyles, useMediaQuery, useTheme } from '@material-ui/core';\n\nimport { ICategory, ICategoryType } from '../types';\nimport { CategoryChip } from './CategoryChip';\n\nconst useStyles = makeStyles({\n\tselected: {\n\t\tbackgroundColor: '#b2afa1',\n\t\tmargin: '5px',\n\t\tborderRadius: '5px',\n\t},\n\tnotSelected: {\n\t\tmargin: '5px',\n\t},\n});\ninterface CategoriesChipsProps {\n\tselectedCategories: ICategoryType[];\n\tcategories: ICategory[];\n\tsetSelectedCategories: (value: ICategoryType[]) => void;\n}\nexport const CategoriesChips: React.FC<CategoriesChipsProps> = ({\n\tselectedCategories,\n\tcategories,\n\tsetSelectedCategories,\n}) => {\n\tconst classes = useStyles();\n\tconst theme = useTheme();\n\tconst smDown = useMediaQuery(theme.breakpoints.down('sm'));\n\n\tconst handleCategoryClick = (value: ICategoryType) => {\n\t\tconst isAlreadySelected = selectedCategories.find((s) => s === value);\n\t\tif (isAlreadySelected) {\n\t\t\tconst filtered = selectedCategories.filter((s) => s !== value);\n\t\t\tsetSelectedCategories(filtered);\n\t\t} else {\n\t\t\tsetSelectedCategories([...selectedCategories, value]);\n\t\t}\n\t};\n\treturn (\n\t\t<Grid container direction={smDown ? 'column' : 'row'}>\n\t\t\t{categories.map(({ color, type }, i) => (\n\t\t\t\t<Grid\n\t\t\t\t\titem\n\t\t\t\t\tkey={i}\n\t\t\t\t\tclassName={\n\t\t\t\t\t\tselectedCategories.includes(type) ? classes.selected : classes.notSelected\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t<CategoryChip\n\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\ttype={type}\n\t\t\t\t\t\tonClick={(type) => handleCategoryClick(type)}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t))}\n\t\t</Grid>\n\t);\n};\n","import { Button } from '@material-ui/core';\n\ninterface CustomButtomProps {\n\tlabel: string;\n\tonClick: () => void;\n}\n\nexport const CustomButton: React.FC<CustomButtomProps> = ({ label, onClick }) => {\n\treturn (\n\t\t<Button\n\t\t\tstyle={{\n\t\t\t\tbackgroundColor: '#69665c',\n\t\t\t\tcolor: '#fff',\n\t\t\t\tborderRadius: '10px',\n\t\t\t\ttextTransform: 'none',\n\t\t\t}}\n\t\t\tonClick={() => onClick()}\n\t\t>\n\t\t\t{label}\n\t\t</Button>\n\t);\n};\n","import { InputLabel, TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles({\n\tnoBorder: {\n\t\tborder: 'none',\n\t},\n\troot: {\n\t\tbackground: '#eeeeee',\n\t},\n\tlabel: {\n\t\tcolor: '#69665c',\n\t\tfontSize: '20px',\n\t\tfontWeight: 400,\n\t},\n});\n\ninterface TextBoxProps {\n\tlabel: string;\n\tvalue: string;\n\tsetValue: (value: string) => void;\n}\nexport const TextBox: React.FC<TextBoxProps> = ({ label, value, setValue }) => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<>\n\t\t\t<InputLabel className={classes.label}>{label}</InputLabel>\n\t\t\t<TextField\n\t\t\t\tclassName={classes.root}\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={(e: any) => setValue(e.target.value)}\n\t\t\t\tvariant='outlined'\n\t\t\t\tfullWidth\n\t\t\t\tplaceholder='placeholder'\n\t\t\t\tInputProps={{ classes: { notchedOutline: classes.noBorder } }}\n\t\t\t></TextField>\n\t\t</>\n\t);\n};\n","import { Grid, Typography } from '@material-ui/core';\nimport { v4 as uuidv4 } from 'uuid';\n\n\n\nimport { ICategory, ICategoryType, ITodo } from '../types';\nimport { CategoriesChips } from './CategoriesChips';\nimport { CustomButton } from './CustomButton';\nimport { TextBox } from './TextBox';\n\n\ninterface AddFormProps {\n\tcategories: ICategory[];\n\taddTodo: (value: ITodo) => void;\n\tonAddClicked: () => void;\n\tdismissPopup: () => void;\n\ttodo: ITodo;\n\tsetTodo: (_todo: ITodo) => void;\n}\nexport const AddForm: React.FC<AddFormProps> = ({\n\tcategories,\n\taddTodo,\n\tdismissPopup,\n\ttodo,\n\tsetTodo,\n\tonAddClicked,\n}) => {\n\tconst selectedCategories = todo.tags.reduce((types: ICategoryType[], tagId) => {\n\t\tconst matchedCategory = categories.find((category) => category.id === tagId);\n\t\tif (matchedCategory) {\n\t\t\ttypes.push(matchedCategory.type);\n\t\t}\n\t\treturn types;\n\t}, []);\n\n\treturn (\n\t\t<Grid container direction='column' spacing={2}>\n\t\t\t<Grid item>\n\t\t\t\t<Grid container justifyContent='space-between'>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<CustomButton label='Cancel' onClick={dismissPopup} />\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<CustomButton label='Add' onClick={onAddClicked} />\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t<Grid item>\n\t\t\t\t<TextBox\n\t\t\t\t\tlabel='Title'\n\t\t\t\t\tvalue={todo.title}\n\t\t\t\t\tsetValue={(title) => setTodo({ ...todo, title })}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t\t<Grid item>\n\t\t\t\t<TextBox\n\t\t\t\t\tlabel='Description'\n\t\t\t\t\tvalue={todo.description}\n\t\t\t\t\tsetValue={(description) => setTodo({ ...todo, description })}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t\t<Grid item>\n\t\t\t\t<Grid container direction='column'>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Typography>Tags</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<CategoriesChips\n\t\t\t\t\t\t\tselectedCategories={selectedCategories}\n\t\t\t\t\t\t\tsetSelectedCategories={(_selectedCategories) => {\n\t\t\t\t\t\t\t\tconst tagIds = _selectedCategories.reduce(\n\t\t\t\t\t\t\t\t\t(selectedTags: number[], _selectedCategory) => {\n\t\t\t\t\t\t\t\t\t\tconst matchedCategory = categories.find(\n\t\t\t\t\t\t\t\t\t\t\t(category) => category.type === _selectedCategory\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tif (matchedCategory) {\n\t\t\t\t\t\t\t\t\t\t\tselectedTags.push(matchedCategory.id);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn selectedTags;\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t[]\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tsetTodo({\n\t\t\t\t\t\t\t\t\t...todo,\n\t\t\t\t\t\t\t\t\ttags: tagIds,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tcategories={categories}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};","import { AppBar, Toolbar, Typography, IconButton, Theme } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n\ttoolbar: {\n\t\tjustifyContent: 'space-between',\n\t},\n\n\tappbar: {\n\t\tbackgroundColor: '#fff',\n\t\tzIndex: theme.zIndex.drawer + 1,\n\t},\n\tlogo: {\n\t\tcolor: 'rgba(0,0,0,.54)',\n\t\tfontSize: '35px',\n\t},\n}));\n\ninterface NavbarProps {\n\topenAddTodo: () => void;\n}\nexport const Navbar: React.FC<NavbarProps> = ({ openAddTodo }) => {\n\tconst classes = useStyles();\n\treturn (\n\t\t<AppBar position='fixed' elevation={0} className={classes.appbar}>\n\t\t\t<Toolbar className={classes.toolbar}>\n\t\t\t\t<Typography className={classes.logo}>todo</Typography>\n\t\t\t\t<IconButton onClick={openAddTodo}>\n\t\t\t\t\t<AddIcon color='inherit' fontSize='large' />\n\t\t\t\t</IconButton>\n\t\t\t</Toolbar>\n\t\t</AppBar>\n\t);\n};\n","import { Typography, Grid } from '@material-ui/core';\n\nimport { ICategoryType } from '../types';\nimport { Tag } from './Tag';\n\ninterface CategoriesProps {\n\ttype: ICategoryType;\n\tcolor: string;\n\tsetActiveState: (value: string) => void;\n}\nexport const Categories: React.FC<CategoriesProps> = ({ type, color, setActiveState }) => {\n\treturn (\n\t\t<>\n\t\t\t<Grid\n\t\t\t\tcontainer\n\t\t\t\tspacing={1}\n\t\t\t\talignItems='center'\n\t\t\t\tstyle={{ padding: '10px' }}\n\t\t\t\tonClick={() => setActiveState(type)}\n\t\t\t>\n\t\t\t\t<Grid item>\n\t\t\t\t\t{' '}\n\t\t\t\t\t<Tag color={color} />{' '}\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Typography>{type}</Typography>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</>\n\t);\n};\n","import { Checkbox } from '@material-ui/core';\nimport { FormControlLabel } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CheckBoxIcon from '@material-ui/icons/CheckBoxOutlined';\nimport React from 'react';\n\nconst useStyles = makeStyles({\n\troot: {\n\t\tcolor: '#b2afa1',\n\t\t'&:checked': {\n\t\t\tcolor: '#69665C',\n\t\t},\n\t},\n\tchecked: {},\n\tlabel: {\n\t\tcolor: '#b2afa1',\n\t},\n\tcheckedLabel: {\n\t\tcolor: '#69665C',\n\t},\n});\n\ninterface CustomCheckboxProps {\n\tlabel: string;\n\tchecked: boolean;\n\tsetChecked: (value: boolean) => void;\n}\n\nexport const CustomCheckbox: React.FC<CustomCheckboxProps> = ({ label, checked, setChecked }) => {\n\tconst classes = useStyles();\n\treturn (\n\t\t<FormControlLabel\n\t\t\tclassName={checked ? classes.checkedLabel : classes.label}\n\t\t\tcontrol={\n\t\t\t\t<Checkbox\n\t\t\t\t\tclasses={{\n\t\t\t\t\t\troot: classes.root,\n\t\t\t\t\t\tchecked: classes.checked,\n\t\t\t\t\t}}\n\t\t\t\t\tdisableFocusRipple\n\t\t\t\t\tdisableRipple\n\t\t\t\t\tchecked={checked}\n\t\t\t\t\tonChange={() => setChecked(!checked)}\n\t\t\t\t\tcolor='default'\n\t\t\t\t\tcheckedIcon={<CheckBoxIcon />}\n\t\t\t\t/>\n\t\t\t}\n\t\t\tlabel={label}\n\t\t/>\n\t);\n};\n","import { Toolbar, Typography, useTheme, Drawer, Grid, Box, Theme, Hidden } from '@material-ui/core';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { makeStyles } from '@material-ui/styles';\n\nimport { ICategory, ICategoryType } from '../types';\nimport { Categories } from './Categories';\nimport { CustomCheckbox } from './CustomCheckbox';\n\nconst drawerWidth = 250;\nconst useStyles = makeStyles((theme: Theme) => ({\n\ttoolbar: {\n\t\tjustifyContent: 'space-between',\n\t},\n\n\tappbar: {\n\t\tbackgroundColor: '#fff',\n\t},\n\tlogo: {\n\t\tcolor: 'rgba(0,0,0,.54)',\n\t\tfontSize: '35px',\n\t},\n\tcontent: {\n\t\tmarginLeft: `${drawerWidth}px`,\n\t\twidth: `calc(100% - ${drawerWidth}px)`,\n\t\t[theme.breakpoints.down('sm')]: {\n\t\t\twidth: '100%',\n\t\t\tmarginLeft: '0px',\n\t\t},\n\t},\n\tsidebarContent: {},\n\tpaperAnchorDockedLeft: {\n\t\tborderRight: 0,\n\t\tpadding: theme.spacing(4),\n\t\twidth: `${drawerWidth}px`,\n\t},\n\tsidebar: {},\n\tselected: {\n\t\tbackgroundColor: '#b2afa1',\n\t},\n\tnotSelected: {},\n}));\ninterface SidebarProps {\n\tcategories: ICategory[];\n\tactiveCategory: ICategoryType;\n\tsetActiveCategory: (value: ICategoryType) => void;\n\thideDone: boolean;\n\tsetHideDone: (value: boolean) => void;\n}\n\nexport const Sidebar: React.FC<SidebarProps> = ({\n\tcategories,\n\tactiveCategory,\n\tsetActiveCategory,\n\thideDone,\n\tsetHideDone,\n}) => {\n\tconst classes = useStyles();\n\n\tconst theme = useTheme();\n\tconst media = useMediaQuery(theme.breakpoints.up('md'));\n\n\treturn (\n\t\t<>\n\t\t\t<Hidden smDown>\n\t\t\t\t<Box className={classes.sidebar}>\n\t\t\t\t\t<Drawer\n\t\t\t\t\t\topen={true}\n\t\t\t\t\t\tanchor='left'\n\t\t\t\t\t\tvariant='permanent'\n\t\t\t\t\t\televation={0}\n\t\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\tpaperAnchorDockedLeft: classes.paperAnchorDockedLeft,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Toolbar />\n\n\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\tcontainer\n\t\t\t\t\t\t\tdirection='column'\n\t\t\t\t\t\t\tspacing={2}\n\t\t\t\t\t\t\tjustifyContent='center'\n\t\t\t\t\t\t\tclassName={classes.sidebar}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<Typography onClick={() => setActiveCategory('all')}>\n\t\t\t\t\t\t\t\t\tList All\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t{categories.map(({ color, type }, i) => (\n\t\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\tactiveCategory === type\n\t\t\t\t\t\t\t\t\t\t\t? classes.selected\n\t\t\t\t\t\t\t\t\t\t\t: classes.notSelected\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Categories\n\t\t\t\t\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\t\t\t\t\ttype={type}\n\t\t\t\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\t\t\t\tsetActiveState={() => setActiveCategory(type)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<CustomCheckbox\n\t\t\t\t\t\t\t\t\tlabel='Hide done tasks'\n\t\t\t\t\t\t\t\t\tchecked={hideDone}\n\t\t\t\t\t\t\t\t\tsetChecked={setHideDone}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Drawer>\n\t\t\t\t</Box>\n\t\t\t</Hidden>\n\t\t\t<Hidden mdUp>\n\t\t\t\t<Toolbar />\n\t\t\t\t<Grid\n\t\t\t\t\tcontainer\n\t\t\t\t\talignItems='center'\n\t\t\t\t\tdirection={media ? 'column' : 'row'}\n\t\t\t\t\tstyle={{ margin: '20px' }}\n\t\t\t\t>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Typography style={{ color: 'red' }}>List All</Typography>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t{categories.map(({ color, type }, i) => (\n\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\tactiveCategory === type ? classes.selected : classes.notSelected\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Categories\n\t\t\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\t\t\ttype={type}\n\t\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\t\tsetActiveState={() => setActiveCategory(type)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t))}\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<CustomCheckbox\n\t\t\t\t\t\t\tlabel='Hide done tasks'\n\t\t\t\t\t\t\tchecked={hideDone}\n\t\t\t\t\t\t\tsetChecked={setHideDone}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Hidden>\n\t\t\t<Hidden smDown>\n\t\t\t\t<Toolbar />\n\t\t\t</Hidden>\n\t\t</>\n\t);\n};\n","import { Grid, Card, CardHeader, CardActions, CardContent, IconButton, Menu, MenuItem, createStyles } from '@material-ui/core';\nimport EditBtn from '@material-ui/icons/MoreHoriz';\nimport { makeStyles } from '@material-ui/styles';\nimport React, { useState } from 'react';\n\n\n\nimport { ITodoWithColors } from '../types';\nimport { CustomCheckbox } from './CustomCheckbox';\nimport { Tag } from './Tag';\n\n\nconst useTodoStyles = makeStyles(() =>\n\tcreateStyles({\n\t\tcard: {\n\t\t\tbackgroundColor: '#fff9de',\n\t\t\tmargin: '20px',\n\t\t},\n\t\tcardHeader: {\n\t\t\ttextDecoration: 'none',\n\t\t},\n\t\tcardContent: {\n\t\t\ttextDecoration: 'none',\n\t\t},\n\t\ttodoDone: {\n\t\t\ttextDecoration: 'line-through',\n\t\t},\n\t})\n);\n\ninterface TodoProps {\n\ttodo: ITodoWithColors;\n\tonDeleteTodoClicked: (todoId: string) => void;\n\tonEditTodoClicked: (todoId: string) => void;\n\tonTodoStatusChanged: (todoId: string, status: boolean) => void;\n}\n\nexport const Todo: React.FC<TodoProps> = ({\n\ttodo,\n\tonDeleteTodoClicked,\n\tonTodoStatusChanged,\n\tonEditTodoClicked,\n}) => {\n\tconst classes = useTodoStyles();\n\tconst [menuRef, setMenuRef] = useState<null | HTMLElement>(null);\n\tconst openTodoMenu = (target: HTMLElement) => setMenuRef(target);\n\tconst closeTodoMenu = () => setMenuRef(null);\n\n\tconst editTodo = () => {\n\t\tcloseTodoMenu();\n\t\tonEditTodoClicked(todo.id);\n\t};\n\tconst deleteTodo = () => {\n\t\tcloseTodoMenu();\n\t\tonDeleteTodoClicked(todo.id);\n\t};\n\n\tconst CardHeaderOptions = (\n\t\t<IconButton onClick={(e) => openTodoMenu(e.currentTarget)}>\n\t\t\t<EditBtn />\n\t\t</IconButton>\n\t);\n\n\tconst TagColors = todo.tags.map((tag) => (\n\t\t<Grid item key={tag.tagId}>\n\t\t\t{' '}\n\t\t\t<Tag color={tag.color}></Tag>\n\t\t</Grid>\n\t));\n\n\treturn (\n\t\t<Card className={classes.card} key={todo.id}>\n\t\t\t<CardHeader\n\t\t\t\ttitle={todo.title}\n\t\t\t\taction={CardHeaderOptions}\n\t\t\t\tclassName={`${classes.cardHeader} ${todo.done ? classes.todoDone : ''}`}\n\t\t\t/>\n\t\t\t<Menu\n\t\t\t\tkeepMounted\n\t\t\t\tid={todo.id}\n\t\t\t\topen={!!menuRef}\n\t\t\t\tanchorEl={menuRef}\n\t\t\t\tonClose={closeTodoMenu}\n\t\t\t>\n\t\t\t\t<MenuItem onClick={editTodo}>EDIT</MenuItem>\n\t\t\t\t<MenuItem onClick={deleteTodo}>DELETE</MenuItem>\n\t\t\t</Menu>\n\n\t\t\t<CardContent className={`${classes.cardContent} ${todo.done ? classes.todoDone : ''}`}>\n\t\t\t\t{todo.description}\n\t\t\t</CardContent>\n\n\t\t\t<CardActions>\n\t\t\t\t<Grid container justifyContent='space-between' alignItems='center'>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Grid container spacing={1}>\n\t\t\t\t\t\t\t{TagColors}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<CustomCheckbox\n\t\t\t\t\t\t\tlabel='Done'\n\t\t\t\t\t\t\tchecked={todo.done}\n\t\t\t\t\t\t\tsetChecked={(value) => onTodoStatusChanged(todo.id, value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</CardActions>\n\t\t</Card>\n\t);\n};","//@ts-ignore\nimport Masonry, { ResponsiveMasonry } from 'react-responsive-masonry';\n\n\n\nimport { ITodoWithColors } from '../types';\nimport { Todo } from './Todo';\n\n\ninterface TodosProps {\n\ttodos: ITodoWithColors[];\n\tonDeleteTodoClicked: (todoId: string) => void;\n\tonEditTodoClicked: (todoId: string) => void;\n\tonTodoStatusChanged: (todoId: string, status: boolean) => void;\n}\n\nexport const Todos: React.FC<TodosProps> = ({\n\ttodos,\n\tonDeleteTodoClicked,\n\tonEditTodoClicked,\n\tonTodoStatusChanged,\n}) => {\n\treturn (\n\t\t<>\n\t\t\t<ResponsiveMasonry columnsCountBreakPoints={{ 350: 1, 900: 3 }}>\n\t\t\t\t<Masonry>\n\t\t\t\t\t{todos.map((todoItem) => (\n\t\t\t\t\t\t<Todo\n\t\t\t\t\t\t\ttodo={todoItem}\n\t\t\t\t\t\t\tkey={todoItem.id}\n\t\t\t\t\t\t\tonDeleteTodoClicked={onDeleteTodoClicked}\n\t\t\t\t\t\t\tonEditTodoClicked={onEditTodoClicked}\n\t\t\t\t\t\t\tonTodoStatusChanged={onTodoStatusChanged}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</Masonry>\n\t\t\t</ResponsiveMasonry>\n\t\t</>\n\t);\n};","export default __webpack_public_path__ + \"static/media/AdobeClean-Regular.16052cdf.woff\";","import {\n\tCssBaseline,\n\tBox,\n\tDialogContent,\n\tDialog,\n\tuseMediaQuery,\n\tuseTheme,\n\tToolbar,\n} from '@material-ui/core';\nimport { ThemeProvider, createTheme, styled } from '@material-ui/core/styles';\nimport { useLocalStorage } from '@rehooks/local-storage';\nimport { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { AddForm } from './Pages/AddForm';\nimport { Navbar } from './Pages/Navbar';\nimport { Sidebar } from './Pages/Sidebar';\nimport { Todos } from './Pages/Todos';\n//@ts-ignore\nimport AdobeClean from './fonts/AdobeClean/AdobeClean-Regular.woff';\nimport { ICategory, ICategoryType, ITagForTodo, ITodo } from './types';\n\nconst theme = createTheme({\n\ttypography: {\n\t\tfontFamily: 'AdobeClean, Arial',\n\t},\n\toverrides: {\n\t\tMuiCssBaseline: {\n\t\t\t'@global': {\n\t\t\t\t'@font-face': [AdobeClean],\n\t\t\t},\n\t\t},\n\t},\n});\n\nconst categories: ICategory[] = [\n\t{ id: 1, type: 'work', color: '#d2ceff' },\n\t{ id: 2, type: 'study', color: '#d1e5f7' },\n\t{ id: 3, type: 'entertainment', color: '#ffcece' },\n\t{ id: 4, type: 'family', color: '#daf2d6' },\n];\n\nconst drawerWidth = 250;\nconst Wrapper = styled(Box)({\n\tmarginLeft: `${drawerWidth}px`,\n\twidth: `calc(100% - ${drawerWidth}px)`,\n\t[theme.breakpoints.down('sm')]: {\n\t\twidth: '100%',\n\t\tmarginLeft: '0px',\n\t},\n});\nfunction App() {\n\tconst theme = useTheme();\n\tconst fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n\tconst [todos, setTodos] = useLocalStorage<ITodo[]>('todos', []);\n\tconst [editableTodo, setEditableTodo] = useState<ITodo | undefined>(undefined);\n\tconst [categoryFilter, setCategoryFilter] = useState<ICategoryType>('all');\n\tconst [statusFilter, setStatusFilter] = useState<boolean>(false);\n\n\tconst category = categories.find((category) => categoryFilter === category.type);\n\n\tconst todoForDisplay = todos.map((todo) => {\n\t\tconst todoTags = todo.tags.reduce<ITagForTodo[]>((tagWithColors, tagId) => {\n\t\t\tconst category = categories.find((category) => category.id === tagId);\n\t\t\tif (!category) {\n\t\t\t\treturn tagWithColors;\n\t\t\t} else {\n\t\t\t\treturn [...tagWithColors, { tagId: tagId, color: category.color }];\n\t\t\t}\n\t\t}, []);\n\n\t\treturn {\n\t\t\t...todo,\n\t\t\ttags: todoTags,\n\t\t};\n\t});\n\n\tconst todosFilteredByCategory =\n\t\tcategoryFilter !== 'all' && category\n\t\t\t? todoForDisplay.filter((todo) => todo.tags.find(({ tagId }) => tagId === category?.id))\n\t\t\t: todoForDisplay;\n\n\tconst todosFilteredByStatusAndCategory = statusFilter\n\t\t? todosFilteredByCategory.filter((todo) => todo.done !== statusFilter)\n\t\t: todosFilteredByCategory;\n\n\treturn (\n\t\t<ThemeProvider theme={theme}>\n\t\t\t<CssBaseline />\n\t\t\t<Navbar\n\t\t\t\topenAddTodo={() =>\n\t\t\t\t\tsetEditableTodo({\n\t\t\t\t\t\ttitle: '',\n\t\t\t\t\t\tdescription: '',\n\t\t\t\t\t\ttags: [],\n\t\t\t\t\t\tdone: false,\n\t\t\t\t\t\tid: uuidv4(),\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t/>\n\n\t\t\t<Sidebar\n\t\t\t\tcategories={categories}\n\t\t\t\tactiveCategory={categoryFilter}\n\t\t\t\tsetActiveCategory={(value) => setCategoryFilter(value)}\n\t\t\t\thideDone={statusFilter}\n\t\t\t\tsetHideDone={setStatusFilter}\n\t\t\t/>\n\n\t\t\t{editableTodo && (\n\t\t\t\t<Dialog open={!!editableTodo} fullScreen={fullScreen}>\n\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t<AddForm\n\t\t\t\t\t\t\ttodo={editableTodo}\n\t\t\t\t\t\t\tsetTodo={(todo: ITodo) => setEditableTodo(todo)}\n\t\t\t\t\t\t\tonAddClicked={() => {\n\t\t\t\t\t\t\t\tconst isEditMode = todos.find(\n\t\t\t\t\t\t\t\t\t(todo) => todo.id === editableTodo.id\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (isEditMode) {\n\t\t\t\t\t\t\t\t\tconst newTodos = todos.map((todo) => {\n\t\t\t\t\t\t\t\t\t\tif (todo.id === editableTodo.id) {\n\t\t\t\t\t\t\t\t\t\t\treturn editableTodo;\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\treturn todo;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tsetTodos(newTodos);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsetTodos([...todos, editableTodo]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tsetEditableTodo(undefined);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tcategories={categories}\n\t\t\t\t\t\t\tdismissPopup={() => setEditableTodo(undefined)}\n\t\t\t\t\t\t\taddTodo={(todo: ITodo) => setTodos([...todos, todo])}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</DialogContent>\n\t\t\t\t</Dialog>\n\t\t\t)}\n\n\t\t\t<Wrapper>\n\t\t\t\t<Toolbar />\n\t\t\t\t<Todos\n\t\t\t\t\ttodos={todosFilteredByStatusAndCategory}\n\t\t\t\t\tonDeleteTodoClicked={(todoId) => {\n\t\t\t\t\t\tsetTodos(todos.filter((todo) => todo.id !== todoId));\n\t\t\t\t\t}}\n\t\t\t\t\tonEditTodoClicked={(todoId) => {\n\t\t\t\t\t\tconst todoToBeEdited = todos.find((todo) => todo.id === todoId);\n\t\t\t\t\t\tsetEditableTodo(todoToBeEdited ? { ...todoToBeEdited } : undefined);\n\t\t\t\t\t}}\n\t\t\t\t\tonTodoStatusChanged={(todoId, status) => {\n\t\t\t\t\t\tconst updatedTodos = todos.map((todo) => {\n\t\t\t\t\t\t\tif (todo.id === todoId) {\n\t\t\t\t\t\t\t\ttodo.done = status;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn todo;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetTodos(updatedTodos);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</Wrapper>\n\t\t</ThemeProvider>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}